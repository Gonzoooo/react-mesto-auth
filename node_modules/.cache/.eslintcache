[{"/Users/Ashtangi/Desktop/react-mesto-auth/src/index.js":"1","/Users/Ashtangi/Desktop/react-mesto-auth/src/reportWebVitals.js":"2","/Users/Ashtangi/Desktop/react-mesto-auth/src/components/App.js":"3","/Users/Ashtangi/Desktop/react-mesto-auth/src/components/Header.js":"4","/Users/Ashtangi/Desktop/react-mesto-auth/src/components/Main.js":"5","/Users/Ashtangi/Desktop/react-mesto-auth/src/components/ImagePopup.js":"6","/Users/Ashtangi/Desktop/react-mesto-auth/src/components/Footer.js":"7","/Users/Ashtangi/Desktop/react-mesto-auth/src/components/EditAvatarPopup.js":"8","/Users/Ashtangi/Desktop/react-mesto-auth/src/components/DeletePlacePopup.js":"9","/Users/Ashtangi/Desktop/react-mesto-auth/src/components/ProtectedRoute.js":"10","/Users/Ashtangi/Desktop/react-mesto-auth/src/components/InfoTooltip.js":"11","/Users/Ashtangi/Desktop/react-mesto-auth/src/components/EditProfilePopup.js":"12","/Users/Ashtangi/Desktop/react-mesto-auth/src/components/AddPlacePopup.js":"13","/Users/Ashtangi/Desktop/react-mesto-auth/src/contexts/CurrentUserContext.js":"14","/Users/Ashtangi/Desktop/react-mesto-auth/src/utils/api.js":"15","/Users/Ashtangi/Desktop/react-mesto-auth/src/components/Register.js":"16","/Users/Ashtangi/Desktop/react-mesto-auth/src/components/Login.js":"17","/Users/Ashtangi/Desktop/react-mesto-auth/src/utils/auth.js":"18","/Users/Ashtangi/Desktop/react-mesto-auth/src/components/PopupWithForm.js":"19","/Users/Ashtangi/Desktop/react-mesto-auth/src/components/Card.js":"20","/Users/Ashtangi/Desktop/react-mesto-auth/src/components/Form.js":"21"},{"size":623,"mtime":1629814366000,"results":"22","hashOfConfig":"23"},{"size":362,"mtime":1629814366000,"results":"24","hashOfConfig":"23"},{"size":7640,"mtime":1629839772457,"results":"25","hashOfConfig":"23"},{"size":1362,"mtime":1629814366000,"results":"26","hashOfConfig":"23"},{"size":2156,"mtime":1629814366000,"results":"27","hashOfConfig":"23"},{"size":1152,"mtime":1629814366000,"results":"28","hashOfConfig":"23"},{"size":294,"mtime":1629814366000,"results":"29","hashOfConfig":"23"},{"size":1131,"mtime":1629814366000,"results":"30","hashOfConfig":"23"},{"size":555,"mtime":1629814366000,"results":"31","hashOfConfig":"23"},{"size":352,"mtime":1629814366000,"results":"32","hashOfConfig":"23"},{"size":850,"mtime":1629814366000,"results":"33","hashOfConfig":"23"},{"size":2330,"mtime":1629814366000,"results":"34","hashOfConfig":"23"},{"size":1726,"mtime":1629814366000,"results":"35","hashOfConfig":"23"},{"size":86,"mtime":1629814366000,"results":"36","hashOfConfig":"23"},{"size":2621,"mtime":1629814366000,"results":"37","hashOfConfig":"23"},{"size":2000,"mtime":1629839772448,"results":"38","hashOfConfig":"23"},{"size":2000,"mtime":1629839772467,"results":"39","hashOfConfig":"23"},{"size":1178,"mtime":1629839529198,"results":"40","hashOfConfig":"23"},{"size":1272,"mtime":1629814366000,"results":"41","hashOfConfig":"23"},{"size":1838,"mtime":1629814366000,"results":"42","hashOfConfig":"23"},{"size":889,"mtime":1629814366000,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"1xnqr93",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"/Users/Ashtangi/Desktop/react-mesto-auth/src/index.js",[],["88","89"],"/Users/Ashtangi/Desktop/react-mesto-auth/src/reportWebVitals.js",[],"/Users/Ashtangi/Desktop/react-mesto-auth/src/components/App.js",["90"],"import React from \"react\";\nimport Header from \"./Header\";\nimport Main from \"./Main\";\nimport Footer from \"./Footer\";\nimport ImagePopup from \"./ImagePopup\";\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\nimport api from \"../utils/api\";\nimport EditProfilePopup from \"./EditProfilePopup\";\nimport EditAvatarPopup from \"./EditAvatarPopup\";\nimport AddPlacePopup from \"./AddPlacePopup\";\nimport DeletePlacePopup from \"./DeletePlacePopup\";\nimport {Route, Switch, useHistory} from \"react-router-dom\";\nimport Register from \"./Register\";\nimport Login from \"./Login\";\nimport InfoTooltip from \"./InfoTooltip\";\nimport ProtectedRoute from \"./ProtectedRoute\";\nimport * as auth from \"../utils/auth\";\n\nfunction App() {\n    const [isEditAvatarPopupOpen, setEditAvatarPopupOpen] = React.useState(false);\n    const [isEditProfilePopupOpen, setEditProfilePopupOpen] = React.useState(false);\n    const [isAddPlacePopupOpen, setAddPlacePopupOpen] = React.useState(false);\n    const [isImagePopupOpen, setImagePopupOpen] = React.useState(false);\n    const [isDeletePopupOpen, setDeletePopupOpen] = React.useState(false);\n    const [selectedCard, setSelectedCard] = React.useState({});\n    const [currentUser, setCurrentUser] = React.useState({});\n    const [cardToDelete, setCardToDelete] = React.useState({});\n    const [cards, setCards] = React.useState([]);\n    const [loggedIn, setLoggedIn] = React.useState(true);\n    let history = useHistory();\n\n    React.useEffect(() => {\n        tokenCheck();\n    }, [loggedIn]);\n\n    function handleLogin(e) {\n        e.preventDefault();\n        setLoggedIn(true);\n    }\n\n    function tokenCheck() {\n        const jwt = localStorage.getItem('jwt');\n        if (jwt){\n            auth.checkToken(jwt).then((res) => {\n                if (res){\n                    const userData = {\n                        email: res.email,\n                        password: res.password\n                    }\n                    setLoggedIn({\n                        loggedIn: true,\n                        userData\n                    }, () => {\n                        history.push(\"/\");\n                    });\n                }\n            });\n        }\n    }\n\n    React.useEffect(() => {\n        Promise.all([api.getUserInfo(), api.getInitialCards()])\n            .then(([info, cards]) => {\n                setCards(cards);\n                setCurrentUser(info);\n            })\n            .catch((e) => {\n                console.log(`ошибка при загрузке данных: ${e}`);\n            });\n    }, []);\n\n    function handleCardLike(card) {\n        const isLiked = card.likes.some((i) => i._id === currentUser._id);\n        api\n            .setLike(card._id, isLiked)\n            .then((newCard) => {\n                setCards((cards) =>\n                    cards.map((c) => (c._id === card._id ? newCard : c))\n                );\n            })\n            .catch((e) => {\n                console.log(`ошибка при загрузке данных: ${e}`);\n            });\n    }\n\n    function handleCardDelete() {\n        api\n            .deleteCard(cardToDelete._id)\n            .then(() => {\n                setCards((cards) => cards.filter((item) => item !== cardToDelete));\n            })\n            .then(() => {\n                closeAllPopups();\n            })\n            .catch((e) => {\n                console.log(`ошибка при загрузке данных: ${e}`);\n            });\n    }\n\n    function handleUpdateUser(info) {\n        api\n            .setUserInfo(info)\n            .then((info) => {\n                setCurrentUser(info);\n            })\n            .then(() => {\n                closeAllPopups();\n            })\n            .catch((e) => {\n                console.log(`ошибка при загрузке данных: ${e}`);\n            });\n    }\n\n    function handleUpdateAvatar(avatar) {\n        api\n            .addNewAvatar(avatar)\n            .then((avatar) => {\n                setCurrentUser(avatar);\n            })\n            .then(() => {\n                closeAllPopups();\n            })\n            .catch((e) => {\n                console.log(`ошибка при загрузке данных: ${e}`);\n            });\n    }\n\n    function handleAddPlaceSubmit(newCard) {\n        api\n            .addNewCard(newCard)\n            .then((newCard) => {\n                setCards([newCard, ...cards]);\n            })\n            .then(() => {\n                closeAllPopups();\n            })\n            .catch((e) => {\n                console.log(`ошибка при загрузке данных: ${e}`);\n            });\n    }\n\n    function handleDeleteCardClick(card) {\n        setDeletePopupOpen(true);\n        setCardToDelete(card);\n    }\n\n    function handleCardClick(card) {\n        setSelectedCard(card);\n        setImagePopupOpen(true);\n    }\n\n    function handleEditAvatarClick() {\n        setEditAvatarPopupOpen(true);\n    }\n\n    function handleEditProfileClick() {\n        setEditProfilePopupOpen(true);\n    }\n\n    function handleAddPlaceClick() {\n        setAddPlacePopupOpen(true);\n    }\n\n    function closeAllPopups() {\n        setAddPlacePopupOpen(false);\n        setEditProfilePopupOpen(false);\n        setEditAvatarPopupOpen(false);\n        setImagePopupOpen(false);\n        setDeletePopupOpen(false);\n    }\n\n    return (\n        <CurrentUserContext.Provider value={currentUser}>\n            <div className=\"page\">\n                <Header />\n                <Switch>\n                    <ProtectedRoute\n                        exact\n                        path=\"/\"\n                        loggedIn={loggedIn}\n                        component={Main}\n                        onEditAvatar={handleEditAvatarClick}\n                        onEditProfile={handleEditProfileClick}\n                        onAddPlace={handleAddPlaceClick}\n                        onCardClick={handleCardClick}\n                        onCardLike={handleCardLike}\n                        onCardDelete={handleDeleteCardClick}\n                        cards={cards}\n                    >\n                    </ProtectedRoute>\n                    <Route path=\"/signup\">\n                        <Register/>\n                    </Route>\n                    <Route path=\"/signin\">\n                        <Login userData={setLoggedIn.userData} handleLogin={handleLogin}/>\n                    </Route>\n                </Switch>\n                <Footer />\n\n                <EditAvatarPopup\n                    isOpen={isEditAvatarPopupOpen}\n                    onClose={closeAllPopups}\n                    onUpdateAvatar={handleUpdateAvatar}\n                />\n\n                <EditProfilePopup\n                    isOpen={isEditProfilePopupOpen}\n                    onClose={closeAllPopups}\n                    onUpdateUser={handleUpdateUser}\n                />\n\n                <AddPlacePopup\n                    isOpen={isAddPlacePopupOpen}\n                    onClose={closeAllPopups}\n                    onAddPlace={handleAddPlaceSubmit}\n                />\n\n                <DeletePlacePopup\n                    isOpen={isDeletePopupOpen}\n                    onClose={closeAllPopups}\n                    onDeletePlace={handleCardDelete}\n                />\n\n                <ImagePopup\n                    isOpen={isImagePopupOpen}\n                    onClose={closeAllPopups}\n                    card={selectedCard}\n                />\n\n                <InfoTooltip\n                    isOpen={isImagePopupOpen}\n                    onClose={closeAllPopups}\n                />\n            </div>\n        </CurrentUserContext.Provider>\n    );\n}\n\nexport default App;","/Users/Ashtangi/Desktop/react-mesto-auth/src/components/Header.js",[],"/Users/Ashtangi/Desktop/react-mesto-auth/src/components/Main.js",[],"/Users/Ashtangi/Desktop/react-mesto-auth/src/components/ImagePopup.js",[],"/Users/Ashtangi/Desktop/react-mesto-auth/src/components/Footer.js",[],"/Users/Ashtangi/Desktop/react-mesto-auth/src/components/EditAvatarPopup.js",[],"/Users/Ashtangi/Desktop/react-mesto-auth/src/components/DeletePlacePopup.js",[],"/Users/Ashtangi/Desktop/react-mesto-auth/src/components/ProtectedRoute.js",[],"/Users/Ashtangi/Desktop/react-mesto-auth/src/components/InfoTooltip.js",[],"/Users/Ashtangi/Desktop/react-mesto-auth/src/components/EditProfilePopup.js",[],"/Users/Ashtangi/Desktop/react-mesto-auth/src/components/AddPlacePopup.js",[],"/Users/Ashtangi/Desktop/react-mesto-auth/src/contexts/CurrentUserContext.js",[],"/Users/Ashtangi/Desktop/react-mesto-auth/src/utils/api.js",[],"/Users/Ashtangi/Desktop/react-mesto-auth/src/components/Register.js",[],"/Users/Ashtangi/Desktop/react-mesto-auth/src/components/Login.js",[],"/Users/Ashtangi/Desktop/react-mesto-auth/src/utils/auth.js",[],"/Users/Ashtangi/Desktop/react-mesto-auth/src/components/PopupWithForm.js",[],"/Users/Ashtangi/Desktop/react-mesto-auth/src/components/Card.js",[],"/Users/Ashtangi/Desktop/react-mesto-auth/src/components/Form.js",[],{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","severity":1,"message":"96","line":34,"column":8,"nodeType":"97","endLine":34,"endColumn":18,"suggestions":"98"},"no-native-reassign",["99"],"no-negated-in-lhs",["100"],"react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'tokenCheck'. Either include it or remove the dependency array.","ArrayExpression",["101"],"no-global-assign","no-unsafe-negation",{"desc":"102","fix":"103"},"Update the dependencies array to be: [loggedIn, tokenCheck]",{"range":"104","text":"105"},[1504,1514],"[loggedIn, tokenCheck]"]