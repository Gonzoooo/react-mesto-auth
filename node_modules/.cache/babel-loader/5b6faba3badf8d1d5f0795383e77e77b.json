{"ast":null,"code":"class Api {\n  constructor(options) {\n    this.cohort = options.cohort;\n    this.headers = options.headers;\n    this.url = options.url;\n  }\n\n  _handleResponse(res) {\n    if (res.ok) {\n      return res.json();\n    } else {\n      return Promise.reject(`Ошибка: ${res.status}`);\n    }\n  } //получили информацию\n\n\n  getUserInfo() {\n    return fetch(`${this.url}${this.cohort}/users/me`, {\n      method: \"GET\",\n      headers: this.headers\n    }).then(this._handleResponse);\n  } //получили карточки\n\n\n  getInitialCards() {\n    return fetch(`${this.url}${this.cohort}/cards`, {\n      method: \"GET\",\n      headers: this.headers\n    }).then(this._handleResponse);\n  } //обновили информацию\n\n\n  setUserInfo(info) {\n    return fetch(`${this.url}${this.cohort}/users/me`, {\n      method: \"PATCH\",\n      headers: this.headers,\n      body: JSON.stringify({\n        name: info.name,\n        about: info.about\n      })\n    }).then(this._handleResponse);\n  } //добавили новую карточку\n\n\n  addNewCard(cardElement) {\n    return fetch(`${this.url}${this.cohort}/cards`, {\n      method: \"POST\",\n      headers: this.headers,\n      body: JSON.stringify({\n        name: cardElement.name,\n        link: cardElement.link\n      })\n    }).then(this._handleResponse);\n  } //сменили аватар\n\n\n  addNewAvatar(avatarElement) {\n    return fetch(`${this.url}${this.cohort}/users/me/avatar`, {\n      method: \"PATCH\",\n      headers: this.headers,\n      body: JSON.stringify({\n        avatar: avatarElement.avatar\n      })\n    }).then(this._handleResponse);\n  } //лайк\n\n\n  setLike(cardId, isLiked) {\n    return fetch(`${this.url}${this.cohort}/cards/likes/${cardId}`, {\n      method: isLiked ? \"DELETE\" : \"PUT\",\n      headers: this.headers\n    }).then(this._handleResponse);\n  } //удаление карточки\n\n\n  deleteCard(cardId) {\n    return fetch(`${this.url}${this.cohort}/cards/${cardId}`, {\n      method: \"DELETE\",\n      headers: this.headers\n    }).then(this._handleResponse);\n  }\n\n}\n\nconst api = new Api({\n  cohort: \"cohort-24\",\n  headers: {\n    authorization: \"0970556a-6f94-4e95-aaf4-193fd780acec\",\n    \"Content-Type\": \"application/json\"\n  },\n  url: \"https://mesto.nomoreparties.co/v1/\"\n});\nexport default api;","map":{"version":3,"sources":["/Users/Ashtangi/Desktop/react-mesto-auth/src/utils/api.js"],"names":["Api","constructor","options","cohort","headers","url","_handleResponse","res","ok","json","Promise","reject","status","getUserInfo","fetch","method","then","getInitialCards","setUserInfo","info","body","JSON","stringify","name","about","addNewCard","cardElement","link","addNewAvatar","avatarElement","avatar","setLike","cardId","isLiked","deleteCard","api","authorization"],"mappings":"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","sourcesContent":["class Api {\n    constructor(options) {\n        this.cohort = options.cohort;\n        this.headers = options.headers;\n        this.url = options.url;\n    }\n\n    _handleResponse(res) {\n        if (res.ok) {\n            return res.json();\n        } else {\n            return Promise.reject(`Ошибка: ${res.status}`);\n        }\n    }\n\n    //получили информацию\n    getUserInfo() {\n        return fetch(`${this.url}${this.cohort}/users/me`, {\n            method: \"GET\",\n            headers: this.headers,\n        }).then(this._handleResponse);\n    }\n\n    //получили карточки\n    getInitialCards() {\n        return fetch(`${this.url}${this.cohort}/cards`, {\n            method: \"GET\",\n            headers: this.headers,\n        }).then(this._handleResponse);\n    }\n\n    //обновили информацию\n    setUserInfo(info) {\n        return fetch(`${this.url}${this.cohort}/users/me`, {\n            method: \"PATCH\",\n            headers: this.headers,\n            body: JSON.stringify({\n                name: info.name,\n                about: info.about,\n            }),\n        }).then(this._handleResponse);\n    }\n\n    //добавили новую карточку\n    addNewCard(cardElement) {\n        return fetch(`${this.url}${this.cohort}/cards`, {\n            method: \"POST\",\n            headers: this.headers,\n            body: JSON.stringify({\n                name: cardElement.name,\n                link: cardElement.link,\n            }),\n        }).then(this._handleResponse);\n    }\n\n    //сменили аватар\n    addNewAvatar(avatarElement) {\n        return fetch(`${this.url}${this.cohort}/users/me/avatar`, {\n            method: \"PATCH\",\n            headers: this.headers,\n            body: JSON.stringify({\n                avatar: avatarElement.avatar,\n            }),\n        }).then(this._handleResponse);\n    }\n\n    //лайк\n    setLike(cardId, isLiked) {\n        return fetch(`${this.url}${this.cohort}/cards/likes/${cardId}`, {\n            method: isLiked ? \"DELETE\" : \"PUT\",\n            headers: this.headers,\n        }).then(this._handleResponse);\n    }\n\n    //удаление карточки\n    deleteCard(cardId) {\n        return fetch(`${this.url}${this.cohort}/cards/${cardId}`, {\n            method: \"DELETE\",\n            headers: this.headers,\n        }).then(this._handleResponse);\n    }\n}\n\nconst api = new Api({\n    cohort: \"cohort-24\",\n    headers: {\n        authorization: \"0970556a-6f94-4e95-aaf4-193fd780acec\",\n        \"Content-Type\": \"application/json\",\n    },\n    url: \"https://mesto.nomoreparties.co/v1/\",\n});\n\nexport default api;"]},"metadata":{},"sourceType":"module"}